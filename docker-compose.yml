version: '3.9'
services:
  mysql:
    image: mysql:8.0
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    volumes:
      - mysql_data:/var/lib/mysql
    env_file:
      - .env
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  email_service:
    container_name: email_app
    image: arjunmalhotra07/email-service:latest
    #! If we dont have a docker image registered, we can create our own by using project on a local 
    # build:
    #   context: ../email-service
    #   dockerfile: Dockerfile
    ports:
      - "50051:50051"
    networks:
      - app_network

  job_portal:
    container_name: job_portal_app
    image: arjunmalhotra07/job-portal-service:latest
    # build:
    #   context: ../gorm_recruiter
    #   dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "9100:9100"
    depends_on:
      - mysql
      - email_service
    networks:
      - app_network
    environment:
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
    env_file:
      - .env
networks:
  app_network:

volumes:
  mysql_data: